name: Build And Release

on:
  push:
    branches:
      - main # Or master, depending on your default branch

permissions:
  contents: write # Needed to create releases and commit files

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # We need to fetch all history to be able to push commits
          fetch-depth: 0
          # This token is used to push commits back to the repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your desired Node.js version

      - name: Check for package-lock.json
        id: check_lockfile
        run: |
          if [ -f package-lock.json ]; then
            echo "lockfile_exists=true" >> $GITHUB_OUTPUT
          else
            echo "lockfile_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies with npm ci
        if: steps.check_lockfile.outputs.lockfile_exists == 'true'
        run: npm ci

      - name: Install dependencies with npm install
        if: steps.check_lockfile.outputs.lockfile_exists == 'false'
        run: npm install

      - name: Run Version Sync and Release Script
        run: node ./version-manager.mjs
        env:
          # The GITHUB_TOKEN is automatically provided by GitHub Actions
          # and is required for the GitHub CLI to interact with the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add all potential changes
          git add versions.json package.json package-lock.json
          
          # Commit only if there are staged changes
          if ! git diff --staged --quiet; then
            git commit -m "chore: Sync version files and lockfile"
            git push
          else
            echo "No changes to commit."
          fi
